const { sequelize } = require('./models');
const AuditoriaService = require('./services/AuditoriaService');

async function configurarAuditoria() {
  try {
    console.log('üîß Configurando sistema de auditoria...\n');

    // Sincronizar banco de dados
    console.log('üìä Sincronizando banco de dados...');
    await sequelize.sync({ force: false, alter: false });
    console.log('‚úÖ Banco sincronizado\n');

    // Testar cria√ß√£o de log
    console.log('üß™ Testando sistema de auditoria...');
    
    const logTeste = await AuditoriaService.registrarOperacao({
      operacao: AuditoriaService.operacoes.CREATE,
      modulo: AuditoriaService.modulos.SISTEMA,
      descricao: 'Teste de configura√ß√£o do sistema de auditoria',
      usuario: { id: 1, nome: 'Sistema', email: 'sistema@manutencao.com' },
      req: null,
      nivelRisco: AuditoriaService.nivelRisco.BAIXO,
      observacoes: 'Log de teste criado durante configura√ß√£o inicial'
    });

    if (logTeste) {
      console.log('‚úÖ Sistema de auditoria configurado com sucesso!');
      console.log(`   Log de teste criado com ID: ${logTeste.id}`);
    } else {
      console.log('‚ö†Ô∏è  Sistema configurado, mas houve problema no teste');
    }

    // Mostrar estat√≠sticas
    console.log('\nüìä Estat√≠sticas atuais:');
    const stats = await AuditoriaService.obterEstatisticas();
    console.log(`   Total de opera√ß√µes: ${stats.totalOperacoes}`);
    console.log(`   Opera√ß√µes com sucesso: ${stats.operacoesSucesso}`);
    console.log(`   Opera√ß√µes cr√≠ticas: ${stats.operacoesCriticas}`);
    console.log(`   Taxa de sucesso: ${stats.taxaSucesso}%`);

    console.log('\nüéâ Configura√ß√£o completa!');
    console.log('\nüìã Funcionalidades dispon√≠veis:');
    console.log('   ‚Ä¢ Auditoria autom√°tica de opera√ß√µes CRUD');
    console.log('   ‚Ä¢ Logs de login/logout');
    console.log('   ‚Ä¢ Rastreamento de opera√ß√µes cr√≠ticas');
    console.log('   ‚Ä¢ Relat√≥rios de auditoria');
    console.log('   ‚Ä¢ Estat√≠sticas de uso');
    console.log('\nüåê Endpoints dispon√≠veis:');
    console.log('   GET /api/auditoria/logs - Listar logs');
    console.log('   GET /api/auditoria/estatisticas - Estat√≠sticas');
    console.log('   GET /api/auditoria/relatorio - Relat√≥rio');
    console.log('   GET /api/auditoria/criticas - Opera√ß√µes cr√≠ticas');

    process.exit(0);
  } catch (error) {
    console.error('‚ùå Erro ao configurar auditoria:', error);
    process.exit(1);
  }
}

configurarAuditoria();