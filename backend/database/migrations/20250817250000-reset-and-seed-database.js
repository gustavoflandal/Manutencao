'use strict';

module.exports = {
  async up(queryInterface, Sequelize) {
    const transaction = await queryInterface.sequelize.transaction();
    
    try {
      console.log('üßπ Limpando dados existentes (preservando usu√°rios)...');
      
      // Desabilitar verifica√ß√µes de chave estrangeira temporariamente
      await queryInterface.sequelize.query('SET FOREIGN_KEY_CHECKS = 0;', { transaction });
      
      // Limpar tabelas na ordem correta (respeitando depend√™ncias)
      const tablesToClear = [
        'planos_preventivos',
        'ordens_servico', 
        'solicitacoes',
        'ativos',
        'setores',
        'categories',
        'subcategories',
        'departments'
      ];
      
      for (const table of tablesToClear) {
        try {
          await queryInterface.bulkDelete(table, null, { transaction });
          console.log(`‚úÖ Tabela ${table} limpa`);
        } catch (error) {
          console.log(`‚ö†Ô∏è Tabela ${table} n√£o encontrada ou j√° vazia`);
        }
      }
      
      // Reabilitar verifica√ß√µes de chave estrangeira
      await queryInterface.sequelize.query('SET FOREIGN_KEY_CHECKS = 1;', { transaction });
      
      console.log('üìä Inserindo dados consistentes...');
      
      // 1. Inserir Categories
      await queryInterface.bulkInsert('categories', [
        {
          id: 1,
          nome: 'Equipamentos Industriais',
          descricao: 'M√°quinas e equipamentos para produ√ß√£o',
          cor: '#007bff',
          icone: 'fas fa-cogs',
          ativo: true,
          createdAt: new Date(),
          updatedAt: new Date()
        },
        {
          id: 2,
          nome: 'Ve√≠culos',
          descricao: 'Ve√≠culos e equipamentos de transporte',
          cor: '#28a745',
          icone: 'fas fa-truck',
          ativo: true,
          createdAt: new Date(),
          updatedAt: new Date()
        },
        {
          id: 3,
          nome: 'Inform√°tica',
          descricao: 'Equipamentos de TI e inform√°tica',
          cor: '#6f42c1',
          icone: 'fas fa-laptop',
          ativo: true,
          createdAt: new Date(),
          updatedAt: new Date()
        }
      ], { transaction });
      
      // 2. Inserir SubCategories
      await queryInterface.bulkInsert('subcategories', [
        {
          id: 1,
          nome: 'Compressores',
          descricao: 'Equipamentos de compress√£o de ar',
          categoria_id: 1,
          ativo: true,
          createdAt: new Date(),
          updatedAt: new Date()
        },
        {
          id: 2,
          nome: 'Motores',
          descricao: 'Motores el√©tricos e a combust√£o',
          categoria_id: 1,
          ativo: true,
          createdAt: new Date(),
          updatedAt: new Date()
        },
        {
          id: 3,
          nome: 'Empilhadeiras',
          descricao: 'Equipamentos de movimenta√ß√£o',
          categoria_id: 2,
          ativo: true,
          createdAt: new Date(),
          updatedAt: new Date()
        }
      ], { transaction });
      
      // 3. Inserir Departments
      await queryInterface.bulkInsert('departments', [
        {
          id: 1,
          nome: 'Manuten√ß√£o Industrial',
          descricao: 'Departamento de manuten√ß√£o de equipamentos',
          codigo: 'MAINT',
          ativo: true,
          createdAt: new Date(),
          updatedAt: new Date()
        },
        {
          id: 2,
          nome: 'Produ√ß√£o',
          descricao: 'Departamento de produ√ß√£o',
          codigo: 'PROD',
          ativo: true,
          createdAt: new Date(),
          updatedAt: new Date()
        },
        {
          id: 3,
          nome: 'Log√≠stica',
          descricao: 'Departamento de log√≠stica e armazenagem',
          codigo: 'LOG',
          ativo: true,
          createdAt: new Date(),
          updatedAt: new Date()
        }
      ], { transaction });
      
      // 4. Inserir Setores
      await queryInterface.bulkInsert('setores', [
        {
          id: 1,
          codigo: 'PROD-01',
          nome: 'Produ√ß√£o Linha 1',
          descricao: 'Linha de produ√ß√£o principal',
          localizacao: 'Galp√£o A - T√©rreo',
          responsavel_id: 1, // Assumindo que existe usu√°rio com ID 1
          ativo: true,
          createdAt: new Date(),
          updatedAt: new Date()
        },
        {
          id: 2,
          codigo: 'PROD-02',
          nome: 'Produ√ß√£o Linha 2',
          descricao: 'Linha de produ√ß√£o secund√°ria',
          localizacao: 'Galp√£o A - 1¬∫ Andar',
          responsavel_id: 1,
          ativo: true,
          createdAt: new Date(),
          updatedAt: new Date()
        },
        {
          id: 3,
          codigo: 'MANUT-01',
          nome: 'Oficina de Manuten√ß√£o',
          descricao: 'Setor de manuten√ß√£o e reparos',
          localizacao: 'Galp√£o B - T√©rreo',
          responsavel_id: 1,
          ativo: true,
          createdAt: new Date(),
          updatedAt: new Date()
        },
        {
          id: 4,
          codigo: 'ESTO-01',
          nome: 'Estoque Geral',
          descricao: 'Estoque de materiais e pe√ßas',
          localizacao: 'Galp√£o C',
          responsavel_id: 1,
          ativo: true,
          createdAt: new Date(),
          updatedAt: new Date()
        }
      ], { transaction });
      
      // 5. Inserir Ativos
      await queryInterface.bulkInsert('ativos', [
        {
          id: 1,
          codigo_patrimonio: 'AT000001',
          nome: 'Compressor de Ar Atlas Copco',
          fabricante: 'Atlas Copco',
          modelo: 'GA22',
          numero_serie: 'AC220001',
          ano_fabricacao: 2020,
          data_aquisicao: '2020-03-15',
          valor_aquisicao: 85000.00,
          valor_atual: 75000.00,
          categoria_id: 1,
          subcategoria_id: 1,
          department_id: 2,
          localizacao_completa: 'Galp√£o A - T√©rreo - Sala de Compressores',
          predio: 'Galp√£o A',
          andar: 'T√©rreo',
          sala: 'Sala de Compressores',
          posicao: 'Posi√ß√£o 1',
          estado: 'operacional',
          criticidade: 'alta',
          potencia: '22kW',
          tensao: '380V',
          frequencia: '60Hz',
          peso: 450.00,
          dimensoes: '1.2m x 0.8m x 1.5m',
          capacidade: '3.5 m¬≥/min',
          responsavel_id: 1,
          setor_id: 1,
          data_proxima_inspecao: '2025-09-01',
          horas_funcionamento: 2450.50,
          contador_producao: 0,
          ativo: true,
          createdAt: new Date(),
          updatedAt: new Date()
        },
        {
          id: 2,
          codigo_patrimonio: 'AT000002',
          nome: 'Motor El√©trico WEG',
          fabricante: 'WEG',
          modelo: 'W22',
          numero_serie: 'WEG440001',
          ano_fabricacao: 2021,
          data_aquisicao: '2021-01-20',
          valor_aquisicao: 12000.00,
          valor_atual: 10500.00,
          categoria_id: 1,
          subcategoria_id: 2,
          department_id: 2,
          localizacao_completa: 'Galp√£o A - T√©rreo - Linha 1',
          predio: 'Galp√£o A',
          andar: 'T√©rreo',
          sala: 'Linha 1',
          posicao: 'Esta√ß√£o 3',
          estado: 'operacional',
          criticidade: 'media',
          potencia: '5CV',
          tensao: '220V',
          frequencia: '60Hz',
          peso: 85.00,
          responsavel_id: 1,
          setor_id: 1,
          data_proxima_inspecao: '2025-08-25',
          horas_funcionamento: 1820.25,
          contador_producao: 15420,
          ativo: true,
          createdAt: new Date(),
          updatedAt: new Date()
        },
        {
          id: 3,
          codigo_patrimonio: 'AT000003',
          nome: 'Empilhadeira Toyota',
          fabricante: 'Toyota',
          modelo: '8FBE20',
          numero_serie: 'TOY330001',
          ano_fabricacao: 2019,
          data_aquisicao: '2019-11-10',
          valor_aquisicao: 65000.00,
          valor_atual: 52000.00,
          categoria_id: 2,
          subcategoria_id: 3,
          department_id: 3,
          localizacao_completa: 'Galp√£o C - Estoque',
          predio: 'Galp√£o C',
          andar: 'T√©rreo',
          sala: 'Estoque',
          posicao: '√Årea de Carga',
          estado: 'operacional',
          criticidade: 'alta',
          capacidade: '2000kg',
          responsavel_id: 1,
          setor_id: 4,
          data_proxima_inspecao: '2025-12-01',
          horas_funcionamento: 3250.75,
          contador_producao: 0,
          ativo: true,
          createdAt: new Date(),
          updatedAt: new Date()
        },
        {
          id: 4,
          codigo_patrimonio: 'AT000004',
          nome: 'Torno CNC Romi',
          fabricante: 'Romi',
          modelo: 'Centur 30D',
          numero_serie: 'ROM440001',
          ano_fabricacao: 2022,
          data_aquisicao: '2022-05-15',
          valor_aquisicao: 125000.00,
          valor_atual: 115000.00,
          categoria_id: 1,
          subcategoria_id: 2,
          department_id: 2,
          localizacao_completa: 'Galp√£o A - 1¬∫ Andar - Linha 2',
          predio: 'Galp√£o A',
          andar: '1¬∫ Andar',
          sala: 'Linha 2',
          posicao: 'Esta√ß√£o 1',
          estado: 'operacional',
          criticidade: 'critica',
          potencia: '15kW',
          tensao: '380V',
          frequencia: '60Hz',
          peso: 2800.00,
          dimensoes: '3.2m x 1.8m x 2.1m',
          responsavel_id: 1,
          setor_id: 2,
          data_proxima_inspecao: '2025-09-15',
          horas_funcionamento: 890.00,
          contador_producao: 5240,
          ativo: true,
          createdAt: new Date(),
          updatedAt: new Date()
        }
      ], { transaction });
      
      // 6. Inserir Planos Preventivos
      await queryInterface.bulkInsert('planos_preventivos', [
        {
          id: 1,
          codigo: 'PP000001',
          nome: 'Manuten√ß√£o Preventiva - Compressor Atlas Copco',
          descricao: 'Manuten√ß√£o preventiva completa do compressor de ar',
          ativo_id: 1,
          setor_id: 1,
          responsavel_id: 1,
          tipo_periodicidade: 'mensal',
          intervalo_periodicidade: 1,
          prioridade: 'alta',
          categoria: 'inspecao',
          duracao_estimada: 120,
          custo_estimado: 850.00,
          procedimento: 'Verificar filtros de ar, √≥leo e separador. Checar n√≠veis de √≥leo. Testar v√°lvulas de seguran√ßa. Verificar vazamentos. Limpar trocador de calor.',
          ferramentas_necessarias: 'Chaves de fenda, chaves philips, torqu√≠metro, mult√≠metro, man√¥metro',
          pecas_necessarias: 'Filtro de ar, filtro de √≥leo, √≥leo lubrificante',
          data_inicio: '2025-08-01',
          proxima_execucao: '2025-09-01',
          dias_antecedencia_alerta: 7,
          status: 'ativo',
          total_execucoes: 0,
          observacoes: 'Equipamento cr√≠tico para produ√ß√£o',
          ativo: true,
          createdAt: new Date(),
          updatedAt: new Date()
        },
        {
          id: 2,
          codigo: 'PP000002',
          nome: 'Lubrifica√ß√£o Motor WEG',
          descricao: 'Lubrifica√ß√£o e inspe√ß√£o do motor el√©trico',
          ativo_id: 2,
          setor_id: 1,
          responsavel_id: 1,
          tipo_periodicidade: 'quinzenal',
          intervalo_periodicidade: 1,
          prioridade: 'normal',
          categoria: 'lubrificacao',
          duracao_estimada: 45,
          custo_estimado: 125.00,
          procedimento: 'Aplicar graxa nos rolamentos. Verificar conex√µes el√©tricas. Medir vibra√ß√£o. Verificar temperatura.',
          ferramentas_necessarias: 'Pistola de graxa, mult√≠metro, term√¥metro infravermelho',
          pecas_necessarias: 'Graxa para rolamentos',
          data_inicio: '2025-08-01',
          proxima_execucao: '2025-08-15',
          dias_antecedencia_alerta: 3,
          status: 'ativo',
          total_execucoes: 0,
          ativo: true,
          createdAt: new Date(),
          updatedAt: new Date()
        },
        {
          id: 3,
          codigo: 'PP000003',
          nome: 'Inspe√ß√£o Empilhadeira Toyota',
          descricao: 'Inspe√ß√£o de seguran√ßa e manuten√ß√£o da empilhadeira',
          ativo_id: 3,
          setor_id: 4,
          responsavel_id: 1,
          tipo_periodicidade: 'semanal',
          intervalo_periodicidade: 1,
          prioridade: 'alta',
          categoria: 'inspecao',
          duracao_estimada: 60,
          custo_estimado: 280.00,
          procedimento: 'Verificar freios, dire√ß√£o, eleva√ß√£o. Checar n√≠veis de fluidos. Testar buzina e sinais. Verificar pneus e correntes.',
          ferramentas_necessarias: 'Chaves diversas, medidor de press√£o, lanterna',
          pecas_necessarias: '√ìleo hidr√°ulico, filtros',
          data_inicio: '2025-08-01',
          proxima_execucao: '2025-08-08',
          dias_antecedencia_alerta: 2,
          status: 'ativo',
          total_execucoes: 0,
          ativo: true,
          createdAt: new Date(),
          updatedAt: new Date()
        },
        {
          id: 4,
          codigo: 'PP000004',
          nome: 'Calibra√ß√£o Torno CNC',
          descricao: 'Calibra√ß√£o e ajuste de precis√£o do torno CNC',
          ativo_id: 4,
          setor_id: 2,
          responsavel_id: 1,
          tipo_periodicidade: 'mensal',
          intervalo_periodicidade: 3,
          prioridade: 'critica',
          categoria: 'calibracao',
          duracao_estimada: 240,
          custo_estimado: 1500.00,
          procedimento: 'Calibrar eixos X, Y, Z. Verificar precis√£o dimensional. Ajustar ferramentas. Testar programas de refer√™ncia.',
          ferramentas_necessarias: 'Rel√≥gio comparador, esquadro de precis√£o, micr√¥metros',
          pecas_necessarias: 'Pe√ßas de calibra√ß√£o, pastilhas de corte',
          data_inicio: '2025-08-01',
          proxima_execucao: '2025-11-01',
          dias_antecedencia_alerta: 14,
          status: 'ativo',
          total_execucoes: 0,
          ativo: true,
          createdAt: new Date(),
          updatedAt: new Date()
        }
      ], { transaction });
      
      // Reset dos auto-increment para evitar conflitos futuros
      await queryInterface.sequelize.query('ALTER TABLE categories AUTO_INCREMENT = 4;', { transaction });
      await queryInterface.sequelize.query('ALTER TABLE subcategories AUTO_INCREMENT = 4;', { transaction });
      await queryInterface.sequelize.query('ALTER TABLE departments AUTO_INCREMENT = 4;', { transaction });
      await queryInterface.sequelize.query('ALTER TABLE setores AUTO_INCREMENT = 5;', { transaction });
      await queryInterface.sequelize.query('ALTER TABLE ativos AUTO_INCREMENT = 5;', { transaction });
      await queryInterface.sequelize.query('ALTER TABLE planos_preventivos AUTO_INCREMENT = 5;', { transaction });
      
      await transaction.commit();
      
      console.log('üéâ Database reset and seeded successfully!');
      console.log('üìä Dados inseridos:');
      console.log('   ‚Ä¢ 3 Categories');
      console.log('   ‚Ä¢ 3 SubCategories');  
      console.log('   ‚Ä¢ 3 Departments');
      console.log('   ‚Ä¢ 4 Setores');
      console.log('   ‚Ä¢ 4 Ativos');
      console.log('   ‚Ä¢ 4 Planos Preventivos');
      
    } catch (error) {
      await transaction.rollback();
      console.error('‚ùå Erro durante reset/seed:', error);
      throw error;
    }
  },

  async down(queryInterface, Sequelize) {
    const transaction = await queryInterface.sequelize.transaction();
    
    try {
      // Desabilitar verifica√ß√µes de chave estrangeira temporariamente
      await queryInterface.sequelize.query('SET FOREIGN_KEY_CHECKS = 0;', { transaction });
      
      // Limpar tabelas na ordem correta
      const tablesToClear = [
        'planos_preventivos',
        'ordens_servico',
        'solicitacoes', 
        'ativos',
        'setores',
        'categories',
        'subcategories',
        'departments'
      ];
      
      for (const table of tablesToClear) {
        try {
          await queryInterface.bulkDelete(table, null, { transaction });
        } catch (error) {
          console.log(`Tabela ${table} n√£o encontrada`);
        }
      }
      
      // Reabilitar verifica√ß√µes de chave estrangeira
      await queryInterface.sequelize.query('SET FOREIGN_KEY_CHECKS = 1;', { transaction });
      
      await transaction.commit();
      console.log('üßπ Rollback completed - all seeded data removed');
      
    } catch (error) {
      await transaction.rollback();
      console.error('‚ùå Erro durante rollback:', error);
      throw error;
    }
  }
};